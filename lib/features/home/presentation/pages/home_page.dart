import 'package:aina_flutter/core/providers/auth/auth_state.dart';
import 'package:aina_flutter/core/types/card_type.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:aina_flutter/core/styles/constants.dart';
import 'package:aina_flutter/core/widgets/stories_list.dart';
import 'package:aina_flutter/core/widgets/base_slider.dart';
import 'package:aina_flutter/core/widgets/upper_header.dart';
import 'package:aina_flutter/core/providers/requests/banners_provider.dart';
import 'package:aina_flutter/core/widgets/buildings_list.dart';
import 'package:aina_flutter/core/providers/requests/promotions_provider.dart';
import 'package:shimmer/shimmer.dart';
import 'package:aina_flutter/core/api/api_client.dart';
import 'package:aina_flutter/core/utils/button_navigation_handler.dart';
import 'package:aina_flutter/core/types/button_config.dart';
import 'package:aina_flutter/core/router/route_observer.dart';
import 'package:aina_flutter/core/providers/requests/settings_provider.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:easy_localization/easy_localization.dart';
import 'package:go_router/go_router.dart';
import 'package:aina_flutter/core/types/promotion.dart';
import 'package:aina_flutter/core/widgets/home_promotions_block.dart';
import 'dart:convert';
import 'package:aina_flutter/core/widgets/error_refresh_widget.dart';
import 'package:aina_flutter/core/providers/requests/stories_provider.dart';
import 'package:aina_flutter/core/providers/requests/buildings_provider.dart';

class HomePage extends ConsumerStatefulWidget {
  const HomePage({super.key});

  @override
  ConsumerState<HomePage> createState() => _HomePageState();
}

class _HomePageState extends ConsumerState<HomePage> with RouteAware {
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –¥–ª—è HomePromotionsBlock
  final GlobalKey _promotionsKey = GlobalKey();
  int _rebuildCounter = 0;

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  DateTime _lastUpdateTime = DateTime.now();

  // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –±—ã–ª –ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
  bool _initialDataFetched = false;

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addPostFrameCallback((_) {
      if (mounted) {
        _fetchData(forceRefresh: true);
      }
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
  Future<void> _fetchData({bool forceRefresh = false}) async {
    if (!mounted) return;

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    _initialDataFetched = true;

    try {
      // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      if (!mounted) return;
      print('üîÑ –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');

      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      if (mounted) {
        try {
          ref.refresh(settingsProvider);
          print('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
        } catch (e) {
          print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: $e');
        }
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ü–∏–∏
      if (mounted) {
        try {
          // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∞–∫—Ü–∏–π
          ref.invalidate(promotionsProvider);
          print('‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∞–∫—Ü–∏–π –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω');

          // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ü–∏–∏
          await ref
              .read(promotionsProvider.notifier)
              .fetchPromotions(context, forceRefresh: forceRefresh);
          print('‚úÖ –ê–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        } catch (e) {
          print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫—Ü–∏–π: $e');
        }
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä—ã
      if (mounted) {
        try {
          // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –±–∞–Ω–Ω–µ—Ä–æ–≤
          ref.invalidate(bannersProvider);
          print('‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä –±–∞–Ω–Ω–µ—Ä–æ–≤ –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω');
        } catch (e) {
          print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –±–∞–Ω–Ω–µ—Ä–æ–≤: $e');
        }
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      if (mounted) {
        try {
          await _checkAuthAndFetchProfile();
        } catch (e) {
          print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: $e');
        }
      }
    } catch (e) {
      if (mounted) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: $e');
      }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–æ–≤
    if (mounted) {
      setState(() {
        _rebuildCounter++;
        _lastUpdateTime = DateTime.now();
        print(
            '‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –°—á–µ—Ç—á–∏–∫: $_rebuildCounter, –í—Ä–µ–º—è: $_lastUpdateTime');
      });
    }
  }

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    routeObserver.subscribe(this, ModalRoute.of(context)!);
  }

  @override
  void dispose() {
    routeObserver.unsubscribe(this);
    super.dispose();
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  Future<void> _refreshDataOnReturn() async {
    if (!mounted) return;

    try {
      // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      if (!mounted) return;

      // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∞–∫—Ü–∏–π
      try {
        ref.invalidate(promotionsProvider);
        print('‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∞–∫—Ü–∏–π –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      } catch (e) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∞–∫—Ü–∏–π: $e');
      }

      // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –±–∞–Ω–Ω–µ—Ä–æ–≤
      if (!mounted) return;
      try {
        ref.invalidate(bannersProvider);
        print('‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä –±–∞–Ω–Ω–µ—Ä–æ–≤ –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      } catch (e) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –±–∞–Ω–Ω–µ—Ä–æ–≤: $e');
      }

      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è
      if (!mounted) return;
      setState(() {
        _rebuildCounter++;
        _lastUpdateTime = DateTime.now();
      });

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      if (!mounted) return;
      await _fetchData(forceRefresh: true);

      // –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      if (!mounted) return;
      Future.delayed(const Duration(milliseconds: 300), () {
        if (!mounted) return;
        setState(() {
          // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—á–µ—Ç—á–∏–∫, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–∂–µ—Ç
          _rebuildCounter++;
        });
      });
    } catch (e) {
      if (mounted) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: $e');
      }
    }
  }

  @override
  void didPopNext() {
    if (!mounted) return;

    print('üîÑ –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ didPopNext');
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º Future, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å UI
    Future.microtask(() async {
      if (!mounted) return;
      await _refreshDataOnReturn();
    });
  }

  Future<void> _checkAuthAndFetchProfile() async {
    if (!mounted) return;

    try {
      final authState = ref.read(authProvider);
      if (!mounted) return;

      if (authState.isAuthenticated && authState.token != null) {
        try {
          final response = await ApiClient().dio.get('/api/promenade/profile');
          if (!mounted) return;

          if (response.data['success'] == true &&
              response.data['data'] != null) {
            try {
              if (!mounted) return;
              final authNotifier = ref.read(authProvider.notifier);
              if (!mounted) return;
              authNotifier.updateUserData(response.data['data']);
              print('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω');
            } catch (e) {
              print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
            }
          }
        } catch (e) {
          print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è: $e');
        }
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    final bannersAsync = ref.watch(bannersProvider);

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö
    if (!_initialDataFetched) {
      WidgetsBinding.instance.addPostFrameCallback((_) {
        if (!mounted) return;

        _fetchData(forceRefresh: true);
      });
    }

    return PopScope(
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –∏ —Å–≤–∞–π–ø
      onPopInvoked: (didPop) {
        if (didPop && mounted) {
          // –ï—Å–ª–∏ –º—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É
          print(
              'üîÑ –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–Ω–æ–ø–∫—É –∏–ª–∏ —Å–≤–∞–π–ø');
          // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º Future, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å UI
          Future.microtask(() async {
            if (!mounted) return;
            await _refreshDataOnReturn();
          });
        }
      },
      child: Scaffold(
        body: Container(
          color: AppColors.primary,
          child: SafeArea(
            child: Container(
              color: AppColors.appBg,
              // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ—Ç—Ç—è–≥–∏–≤–∞–Ω–∏–µ–º –≤–Ω–∏–∑
              child: NotificationListener<OverscrollIndicatorNotification>(
                onNotification: (OverscrollIndicatorNotification notification) {
                  // –û—Ç–º–µ–Ω—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä overscroll (—ç—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Ç—è–≥–∏–≤–∞–Ω–∏–∏)
                  notification.disallowIndicator();
                  return true;
                },
                child: CustomScrollView(
                  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é ClampingScrollPhysics, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç overscroll
                  // –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
                  physics: const ClampingScrollPhysics(),
                  slivers: [
                    const SliverToBoxAdapter(
                      child: UpperHeader(),
                    ),
                    const SliverToBoxAdapter(
                      child: StoryList(),
                    ),
                    SliverToBoxAdapter(
                      child: bannersAsync.when(
                        loading: () => Shimmer.fromColors(
                          baseColor: Colors.grey[100]!,
                          highlightColor: Colors.grey[300]!,
                          child: Container(
                            height: 200,
                            margin: const EdgeInsets.symmetric(
                              horizontal: AppLength.xs,
                              vertical: AppLength.xs,
                            ),
                            decoration: BoxDecoration(
                              color: Colors.grey[300],
                              borderRadius: BorderRadius.circular(8),
                            ),
                          ),
                        ),
                        error: (error, stack) {
                          print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–∞–Ω–Ω–µ—Ä–æ–≤: $error');
                          return Container(
                            height: 200,
                            margin: const EdgeInsets.symmetric(
                              horizontal: AppLength.xs,
                              vertical: AppLength.xs,
                            ),
                            decoration: BoxDecoration(
                              color: Colors.red.shade100,
                              borderRadius: BorderRadius.circular(8),
                              border: Border.all(color: Colors.red, width: 2),
                            ),
                            child: ErrorRefreshWidget(
                              onRefresh: () {
                                if (!mounted) return;
                                // –ò—Å–ø–æ–ª—å–∑—É–µ–º Future.microtask –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                                Future.microtask(() {
                                  if (!mounted) return;
                                  try {
                                    ref.invalidate(bannersProvider);
                                  } catch (e) {
                                    print(
                                        '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–Ω–Ω–µ—Ä–æ–≤: $e');
                                  }
                                });
                              },
                              errorMessage: 'stories.error.loading'.tr(),
                              isCompact: true,
                              isServerError: true,
                              backgroundColor: Colors.transparent,
                              textColor: Colors.red.shade900,
                              errorColor: Colors.red,
                              icon: Icons.warning_amber_rounded,
                            ),
                          );
                        },
                        data: (banners) {
                          return CarouselWithIndicator(
                            slideList: banners,
                            showIndicators: true,
                            onSlideClick: (slide) {
                              if (!mounted) return;
                              if (slide.button == null) return;

                              final button = slide.button!;
                              ButtonNavigationHandler.handleNavigation(
                                context,
                                ref,
                                ButtonConfig(
                                  label: button.label,
                                  color: button.color,
                                  isInternal: button.isInternal,
                                  link: button.link,
                                  internal: button.isInternal == true &&
                                          button.internal != null
                                      ? ButtonInternal(
                                          model: button.internal!.model,
                                          id: button.internal!.id ?? 0,
                                          buildingType:
                                              button.internal!.buildingType ??
                                                  '',
                                          isAuthRequired:
                                              button.internal!.isAuthRequired,
                                        )
                                      : null,
                                ),
                              );
                            },
                          );
                        },
                      ),
                    ),
                    const SliverToBoxAdapter(
                      child: BuildingsList(),
                    ),
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º HomePromotionsBlock —Å –∫–ª—é—á–æ–º –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–∞
                    SliverToBoxAdapter(
                      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á, –≤–∫–ª—é—á–∞—é—â–∏–π –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                      key: ValueKey(
                          'promotions_block_${_rebuildCounter}_${_lastUpdateTime.millisecondsSinceEpoch}'),
                      child: Builder(builder: (context) {
                        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Builder –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
                        return HomePromotionsBlock(
                          // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —Å–∞–º–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
                          key: Key(
                              'promotions_key_${_rebuildCounter}_${_lastUpdateTime.millisecondsSinceEpoch}'),
                          cardType: PromotionCardType.small,
                          showArrow: true,
                          showDivider: false,
                          sortByQr: true,
                          maxElements: 2,
                          onViewAllTap: () {
                            context.pushNamed('promotions');
                          },
                        );
                      }),
                    ),
                    const SliverToBoxAdapter(
                      child: SizedBox(
                        height: AppLength.xxxl,
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}
